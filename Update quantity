1. Products Table (Stores product details and stock count)


CREATE TABLE PRODUCTS (
    PRODUCT_ID     NUMBER PRIMARY KEY,
    PRODUCT_NAME   VARCHAR2(255),
    PRICE          NUMBER NOT NULL,
    STOCK_QUANTITY NUMBER NOT NULL
);

2. Cart Table (Stores user's cart items)

CREATE TABLE CART (
    CART_ID     NUMBER PRIMARY KEY,
    USER_ID     NUMBER NOT NULL,
    PRODUCT_ID  NUMBER NOT NULL,
    QUANTITY    NUMBER NOT NULL,
    TOTAL_PRICE NUMBER,
    FOREIGN KEY (PRODUCT_ID) REFERENCES PRODUCTS(PRODUCT_ID)
);


PL/SQL Procedure to Update Cart Quantity

CREATE OR REPLACE PROCEDURE UPDATE_CART_QUANTITY(
    p_user_id IN NUMBER,
    p_product_id IN NUMBER,
    p_new_quantity IN NUMBER
) AS
    v_stock_quantity NUMBER;
    v_current_quantity NUMBER;
    v_price NUMBER;
    v_total_price NUMBER;
BEGIN
    -- Check if the product exists in stock
    SELECT STOCK_QUANTITY, PRICE INTO v_stock_quantity, v_price
    FROM PRODUCTS
    WHERE PRODUCT_ID = p_product_id;

    -- Validate stock availability
    IF v_stock_quantity < p_new_quantity THEN
        DBMS_OUTPUT.PUT_LINE('Error: Not enough stock available.');
        RETURN;
    END IF;

    -- Check if product exists in cart
    BEGIN
        SELECT QUANTITY INTO v_current_quantity
        FROM CART
        WHERE USER_ID = p_user_id AND PRODUCT_ID = p_product_id;

        -- If quantity is updated, check if it's reduced or increased
        IF p_new_quantity = 0 THEN
            -- If new quantity is 0, remove item from cart
            DELETE FROM CART WHERE USER_ID = p_user_id AND PRODUCT_ID = p_product_id;
            DBMS_OUTPUT.PUT_LINE('Success: Item removed from cart.');
        ELSE
            -- Update cart quantity
            UPDATE CART
            SET QUANTITY = p_new_quantity,
                TOTAL_PRICE = p_new_quantity * v_price
            WHERE USER_ID = p_user_id AND PRODUCT_ID = p_product_id;

            -- Adjust stock quantity accordingly
            UPDATE PRODUCTS
            SET STOCK_QUANTITY = STOCK_QUANTITY + v_current_quantity - p_new_quantity
            WHERE PRODUCT_ID = p_product_id;

            DBMS_OUTPUT.PUT_LINE('Success: Cart updated successfully.');
        END IF;

    EXCEPTION
        WHEN NO_DATA_FOUND THEN
            DBMS_OUTPUT.PUT_LINE('Error: Product not found in cart.');
    END;

EXCEPTION
    WHEN OTHERS THEN
        DBMS_OUTPUT.PUT_LINE('Error: Unable to update cart.');
END UPDATE_CART_QUANTITY;
/


Executing the Procedure
Call the procedure in SQL Developer or APEX:

BEGIN
    UPDATE_CART_QUANTITY(101, 5, 3);  -- User 101 updates Product 5 to 3 quantities
END;
/
